function [  ] = MS2_RL_choice_f_time_and_f_dQ( model_n )
%[  ] = MS2_RL_choice_f_time_and_f_dQ( model_n )
%MS2_RL_choice_f_time_and_f_dQ displays average percentage of best choices for gain
%and loss pair per run and across runs across subjects.
% Overlaps also prediction from the model model_n.
%
% INPUTS
% model_n: model number

%% working directories
root = 'define path here';
saveFolder = [root,'behavior_summary', filesep 'RL_model',filesep];

%% subject identification
subject_id = {'enter list of subjects here'};
NS = length(subject_id);

%% main parameters
n_RL_runs = 3;
n_GL_trials_perRun = 24;
[choice_best_GP.perSub.perRun,...
    choice_worse_LP.perSub.perRun,...
    pChoice_best_GP.perSub.perRun,...
    pChoice_worse_LP.perSub.perRun,...
    conf_GP.perSub.perRun,...
    conf_LP.perSub.perRun,...
    dVlr_GP.perSub.perRun,...
    dVlr_LP.perSub.perRun] = deal( NaN(n_GL_trials_perRun, NS, n_RL_runs) );
[choice_best_GP.perSub.aRuns,...
    choice_worse_LP.perSub.aRuns,...
    pChoice_best_GP.perSub.aRuns,...
    pChoice_worse_LP.perSub.aRuns,...
    conf_GP.perSub.aRuns,...
    conf_LP.perSub.aRuns,...
    dVlr_GP.perSub.aRuns,...
    dVlr_LP.perSub.aRuns] = deal(NaN(n_GL_trials_perRun, NS));
n_conf_bins = 8;
[choice_best_f_Conf_GP.perSub.perRun,...
    choice_worse_f_Conf_LP.perSub.perRun,...
    pChoice_best_f_Conf_GP.perSub.perRun,...
    pChoice_worse_f_Conf_LP.perSub.perRun,...
    conf_f_Conf_GP.perSub.perRun,...
    conf_f_Conf_LP.perSub.perRun] = deal( NaN(n_conf_bins, NS, n_RL_runs) );
[choice_best_f_Conf_GP.perSub.aRuns,...
    choice_worse_f_Conf_LP.perSub.aRuns,...
    pChoice_best_f_Conf_GP.perSub.aRuns,...
    pChoice_worse_f_Conf_LP.perSub.aRuns,...
    conf_f_Conf_GP.perSub.aRuns,...
    conf_f_Conf_LP.perSub.aRuns] = deal(NaN(n_conf_bins, NS));
n_dVlr_bins = 8;
[choice_best_f_dVlr_GP.perSub.perRun,...
    choice_worse_f_dVlr_LP.perSub.perRun,...
    pChoice_best_f_dVlr_GP.perSub.perRun,...
    pChoice_worse_f_dVlr_LP.perSub.perRun,...
    dVlr_f_dVlr_GP.perSub.perRun,...
    dVlr_f_dVlr_LP.perSub.perRun] = deal( NaN(n_dVlr_bins, NS, n_RL_runs) );
[choice_best_f_dVlr_GP.perSub.aRuns,...
    choice_worse_f_dVlr_LP.perSub.aRuns,...
    pChoice_best_f_dVlr_GP.perSub.aRuns,...
    pChoice_worse_f_dVlr_LP.perSub.aRuns,...
    dVlr_f_dVlr_GP.perSub.aRuns,...
    dVlr_f_dVlr_LP.perSub.aRuns] = deal(NaN(n_dVlr_bins, NS));

%% subject loop
for iS = 1:NS
    %% subject info
    sub_nm = subject_id{iS};
    if strcmp(sub_nm(3),'_')
        subid   = sub_nm(2);
    elseif ~strcmp(sub_nm(3),'_') && strcmp(sub_nm(4),'_')
        subid   = sub_nm(2:3);
    end
    sub_folder = [root, sub_nm, filesep];
    sub_model_folder = [sub_folder, 'fMRI_analysis', filesep];
    
    RL_runs_idx = MS2_task_runs_extraction('RL',sub_nm);
    
    %% loop through runs
    for iRun = 1:n_RL_runs
        run_nm = num2str(RL_runs_idx(iRun));
        
        %% load choice and pair type
        learn = getfield(load([sub_model_folder,'onsets_sub',subid,'_learning_run',run_nm,'.mat']),'learn');
        % extract info about number of trials kept/excluded
        trialN_GP_tmp = learn.mod.trialN.raw.gainPair.main;
        trialN_GP_tmp_bis = 1:length(trialN_GP_tmp);
        trialN_LP_tmp = learn.mod.trialN.raw.lossPair.main;
        trialN_LP_tmp_bis = 1:length(trialN_LP_tmp);
        % extract relevant data
        pChoice_best_tmp = learn.mod.Q_model(model_n).raw.pChoice.best.allPairs.allPairsTrials;
        pChoice_worse_tmp = learn.mod.Q_model(model_n).raw.pChoice.worse.allPairs.allPairsTrials;
        choiceBest_tmp    = learn.mod.choiceBest.raw.allPairs.main;
        % left/right
        sideBest_tmp = learn.mod.sideBest.raw.allPairs.main;
        choiceleft_tmp = (choiceBest_tmp == 1).*(sideBest_tmp == -1) +...
            (choiceBest_tmp == 0).*(sideBest_tmp == 1);
        pChoice_left_tmp = learn.mod.Q_model(model_n).raw.pChoice.left.allPairs.allPairsTrials;

        valence = learn.mod.valence.raw.allPairs.main;
        GP_trials = valence == 1;
        LP_trials = valence == -1;
        dVlr_GP_tmp = learn.mod.Q_model(model_n).raw.dQ_LR.gainPair.gainPairTrials;
        dVlr_LP_tmp = learn.mod.Q_model(model_n).raw.dQ_LR.lossPair.lossPairTrials;
        
        %% split according to pair type
        choice_best_GP.perSub.perRun(trialN_GP_tmp_bis, iS, iRun) = choiceBest_tmp( GP_trials);
        choice_worse_LP.perSub.perRun(trialN_LP_tmp_bis, iS, iRun) = 1 - choiceBest_tmp( LP_trials);
        pChoice_best_GP.perSub.perRun(trialN_GP_tmp_bis, iS, iRun) = pChoice_best_tmp(GP_trials);
        pChoice_worse_LP.perSub.perRun(trialN_LP_tmp_bis, iS, iRun) = pChoice_worse_tmp(LP_trials);
        
        % extract confidence bins
        conf_GP_tmp = (pChoice_best_tmp(GP_trials) - 0.5).^2;
        conf_LP_tmp = (pChoice_worse_tmp(LP_trials) - 0.5).^2;
        conf_GP.perSub.perRun(trialN_GP_tmp_bis, iS, iRun) = conf_GP_tmp;
        conf_LP.perSub.perRun(trialN_LP_tmp_bis, iS, iRun) = conf_LP_tmp;
        [choice_best_f_Conf_GP.perSub.perRun(:, iS, iRun),...
            conf_f_Conf_GP.perSub.perRun(:, iS, iRun)] = do_bin2(choiceBest_tmp( GP_trials),...
            conf_GP_tmp,...
            n_conf_bins, 0);
        [choice_worse_f_Conf_LP.perSub.perRun(:, iS, iRun),...
            conf_f_Conf_LP.perSub.perRun(:, iS, iRun)] = do_bin2((1 - choiceBest_tmp( LP_trials)),...
            conf_LP_tmp,...
            n_conf_bins, 0);
        [pChoice_best_f_Conf_GP.perSub.perRun(:, iS, iRun),...
            conf_f_Conf_GP.perSub.perRun(:, iS, iRun)] = do_bin2(pChoice_best_tmp( GP_trials),...
            conf_GP_tmp,...
            n_conf_bins, 0);
        [pChoice_worse_f_Conf_LP.perSub.perRun(:, iS, iRun),...
            conf_f_Conf_LP.perSub.perRun(:, iS, iRun)] = do_bin2(pChoice_worse_tmp( LP_trials),...
            conf_LP_tmp,...
            n_conf_bins, 0);
        % extract dV (left-right) bins
        dVlr_GP.perSub.perRun(trialN_GP_tmp_bis, iS, iRun) = dVlr_GP_tmp;
        dVlr_LP.perSub.perRun(trialN_LP_tmp_bis, iS, iRun) = dVlr_LP_tmp;
        [choice_best_f_dVlr_GP.perSub.perRun(:, iS, iRun),...
            dVlr_f_dVlr_GP.perSub.perRun(:, iS, iRun)] = do_bin2(choiceBest_tmp( GP_trials),...
            dVlr_GP_tmp,...
            n_dVlr_bins, 0);
        [choice_worse_f_dVlr_LP.perSub.perRun(:, iS, iRun),...
            dVlr_f_dVlr_LP.perSub.perRun(:, iS, iRun)] = do_bin2((1 - choiceBest_tmp( LP_trials)),...
            dVlr_LP_tmp,...
            n_dVlr_bins, 0);
        [pChoice_best_f_dVlr_GP.perSub.perRun(:, iS, iRun),...
            dVlr_f_dVlr_GP.perSub.perRun(:, iS, iRun)] = do_bin2(pChoice_best_tmp( GP_trials),...
            dVlr_GP_tmp,...
            n_dVlr_bins, 0);
        [pChoice_worse_f_dVlr_LP.perSub.perRun(:, iS, iRun),...
            dVlr_f_dVlr_LP.perSub.perRun(:, iS, iRun)] = do_bin2(pChoice_worse_tmp( LP_trials),...
            dVlr_LP_tmp,...
            n_dVlr_bins, 0);
        
        [choice_left_f_dVlr_GP.perSub.perRun(:, iS, iRun),...
            dVlr_f_dVlr_GP.perSub.perRun(:, iS, iRun)] = do_bin2(choiceleft_tmp( GP_trials),...
            dVlr_GP_tmp,...
            n_dVlr_bins, 0);
        [choice_left_f_dVlr_LP.perSub.perRun(:, iS, iRun),...
            dVlr_f_dVlr_LP.perSub.perRun(:, iS, iRun)] = do_bin2((1 - choiceleft_tmp( LP_trials)),...
            dVlr_LP_tmp,...
            n_dVlr_bins, 0);
        [pChoice_left_f_dVlr_GP.perSub.perRun(:, iS, iRun),...
            dVlr_f_dVlr_GP.perSub.perRun(:, iS, iRun)] = do_bin2(pChoice_left_tmp( GP_trials),...
            dVlr_GP_tmp,...
            n_dVlr_bins, 0);
        [pChoice_left_f_dVlr_LP.perSub.perRun(:, iS, iRun),...
            dVlr_f_dVlr_LP.perSub.perRun(:, iS, iRun)] = do_bin2((1-pChoice_left_tmp( LP_trials)),...
            dVlr_LP_tmp,...
            n_dVlr_bins, 0);
    end % run loop
    
    %% average across sessions per subjects
    choice_best_GP.perSub.aRuns(:,iS)       = mean(choice_best_GP.perSub.perRun(:, iS, :), 3,'omitnan');
    choice_worse_LP.perSub.aRuns(:,iS)     = mean(choice_worse_LP.perSub.perRun(:, iS, :), 3,'omitnan');
    pChoice_best_GP.perSub.aRuns(:,iS)   = mean(pChoice_best_GP.perSub.perRun(:, iS, :), 3,'omitnan');
    pChoice_worse_LP.perSub.aRuns(:,iS) = mean(pChoice_worse_LP.perSub.perRun(:, iS, :), 3,'omitnan');
    % confidence
    conf_GP.perSub.aRuns(:,iS) = mean( conf_GP.perSub.perRun(:, iS, :), 3,'omitnan');
    conf_LP.perSub.aRuns(:,iS) = mean( conf_LP.perSub.perRun(:, iS, :), 3,'omitnan');
    choice_best_f_Conf_GP.perSub.aRuns(:,iS)       = mean(choice_best_f_Conf_GP.perSub.perRun(:, iS, :), 3,'omitnan');
    choice_worse_f_Conf_LP.perSub.aRuns(:,iS)     = mean(choice_worse_f_Conf_LP.perSub.perRun(:, iS, :), 3,'omitnan');
    pChoice_best_f_Conf_GP.perSub.aRuns(:,iS)   = mean(pChoice_best_f_Conf_GP.perSub.perRun(:, iS, :), 3,'omitnan');
    pChoice_worse_f_Conf_LP.perSub.aRuns(:,iS) = mean(pChoice_worse_f_Conf_LP.perSub.perRun(:, iS, :), 3,'omitnan');
    conf_f_Conf_GP.perSub.aRuns(:,iS) = mean( conf_f_Conf_GP.perSub.perRun(:, iS, :), 3,'omitnan');
    conf_f_Conf_LP.perSub.aRuns(:,iS) = mean( conf_f_Conf_LP.perSub.perRun(:, iS, :), 3,'omitnan');
    % dV left - right
    dVlr_GP.perSub.aRuns(:,iS) = mean( dVlr_GP.perSub.perRun(:, iS, :), 3,'omitnan');
    dVlr_LP.perSub.aRuns(:,iS) = mean( dVlr_LP.perSub.perRun(:, iS, :), 3,'omitnan');
    choice_best_f_dVlr_GP.perSub.aRuns(:,iS)       = mean(choice_best_f_dVlr_GP.perSub.perRun(:, iS, :), 3,'omitnan');
    choice_worse_f_dVlr_LP.perSub.aRuns(:,iS)     = mean(choice_worse_f_dVlr_LP.perSub.perRun(:, iS, :), 3,'omitnan');
    pChoice_best_f_dVlr_GP.perSub.aRuns(:,iS)   = mean(pChoice_best_f_dVlr_GP.perSub.perRun(:, iS, :), 3,'omitnan');
    pChoice_worse_f_dVlr_LP.perSub.aRuns(:,iS) = mean(pChoice_worse_f_dVlr_LP.perSub.perRun(:, iS, :), 3,'omitnan');
    dVlr_f_dVlr_GP.perSub.aRuns(:,iS) = mean( dVlr_f_dVlr_GP.perSub.perRun(:, iS, :), 3,'omitnan');
    dVlr_f_dVlr_LP.perSub.aRuns(:,iS) = mean( dVlr_f_dVlr_LP.perSub.perRun(:, iS, :), 3,'omitnan');
    choice_left_f_dVlr_GP.perSub.aRuns(:,iS)       = mean(choice_left_f_dVlr_GP.perSub.perRun(:, iS, :), 3,'omitnan');
    choice_left_f_dVlr_LP.perSub.aRuns(:,iS)     = mean(choice_left_f_dVlr_LP.perSub.perRun(:, iS, :), 3,'omitnan');
    pChoice_left_f_dVlr_GP.perSub.aRuns(:,iS)   = mean(pChoice_left_f_dVlr_GP.perSub.perRun(:, iS, :), 3,'omitnan');
    pChoice_left_f_dVlr_LP.perSub.aRuns(:,iS) = mean(pChoice_left_f_dVlr_LP.perSub.perRun(:, iS, :), 3,'omitnan');
end % subject loop

%% average across subjects
% average per run
[choice_best_GP.aSubs.perRun,...
    choice_worse_LP.aSubs.perRun,...
    pChoice_best_GP.aSubs.perRun,...
    pChoice_worse_LP.aSubs.perRun] = deal( NaN(n_GL_trials_perRun, n_RL_runs));
[choice_best_f_Conf_GP.aSubs.perRun,...
    choice_worse_f_Conf_LP.aSubs.perRun,...
    pChoice_best_f_Conf_GP.aSubs.perRun,...
    pChoice_worse_f_Conf_LP.aSubs.perRun] = deal(NaN(n_conf_bins, n_RL_runs));
[choice_best_f_dVlr_GP.aSubs.perRun,...
    choice_worse_f_dVlr_LP.aSubs.perRun,...
    pChoice_best_f_dVlr_GP.aSubs.perRun,...
    pChoice_worse_f_dVlr_LP.aSubs.perRun,...
    choice_left_f_dVlr_GP.aSubs.perRun,...
    choice_left_f_dVlr_LP.aSubs.perRun,...
    pChoice_left_f_dVlr_GP.aSubs.perRun,...
    pChoice_left_f_dVlr_LP.aSubs.perRun] = deal(NaN(n_dVlr_bins, n_RL_runs));
% average across subjects for each run
for iRun = 1:n_RL_runs
    % mean
    [choice_best_GP.m_aSubs.perRun(:,iRun), choice_best_GP.sem_aSubs.perRun(:,iRun)] = mean_sem_sd(choice_best_GP.perSub.perRun(:,:,iRun), 2);
    [choice_worse_LP.m_aSubs.perRun(:,iRun), choice_worse_LP.sem_aSubs.perRun(:,iRun)] = mean_sem_sd(choice_worse_LP.perSub.perRun(:,:,iRun), 2);
    [pChoice_best_GP.m_aSubs.perRun(:,iRun), pChoice_best_GP.sem_aSubs.perRun(:,iRun)] = mean_sem_sd(pChoice_best_GP.perSub.perRun(:,:,iRun), 2);
    [pChoice_worse_LP.m_aSubs.perRun(:,iRun), pChoice_worse_LP.sem_aSubs.perRun(:,iRun)] = mean_sem_sd(pChoice_worse_LP.perSub.perRun(:,:,iRun), 2);
    % conf
    [conf_GP.m_aSubs.perRun(:,iRun), conf_GP.sem_aSubs.perRun(:,iRun)] = mean_sem_sd(conf_GP.perSub.perRun(:,:,iRun), 2);
    [conf_LP.m_aSubs.perRun(:,iRun), conf_LP.sem_aSubs.perRun(:,iRun)] = mean_sem_sd(conf_LP.perSub.perRun(:,:,iRun), 2);
    [choice_best_f_Conf_GP.m_aSubs.perRun(:,iRun), choice_best_f_Conf_GP.sem_aSubs.perRun(:,iRun)] = mean_sem_sd(choice_best_f_Conf_GP.perSub.perRun(:,:,iRun), 2);
    [choice_worse_f_Conf_LP.m_aSubs.perRun(:,iRun), choice_worse_f_Conf_LP.sem_aSubs.perRun(:,iRun)] = mean_sem_sd(choice_worse_f_Conf_LP.perSub.perRun(:,:,iRun), 2);
    [pChoice_best_f_Conf_GP.m_aSubs.perRun(:,iRun), pChoice_best_f_Conf_GP.sem_aSubs.perRun(:,iRun)] = mean_sem_sd(pChoice_best_f_Conf_GP.perSub.perRun(:,:,iRun), 2);
    [pChoice_worse_f_Conf_LP.m_aSubs.perRun(:,iRun), pChoice_worse_f_Conf_LP.sem_aSubs.perRun(:,iRun)] = mean_sem_sd(pChoice_worse_f_Conf_LP.perSub.perRun(:,:,iRun), 2);
    % dV
    [dVlr_GP.m_aSubs.perRun(:,iRun), dVlr_GP.sem_aSubs.perRun(:,iRun)] = mean_sem_sd(dVlr_GP.perSub.perRun(:,:,iRun), 2);
    [dVlr_LP.m_aSubs.perRun(:,iRun), dVlr_LP.sem_aSubs.perRun(:,iRun)] = mean_sem_sd(dVlr_LP.perSub.perRun(:,:,iRun), 2);
    [choice_best_f_dVlr_GP.m_aSubs.perRun(:,iRun), choice_best_f_dVlr_GP.sem_aSubs.perRun(:,iRun)] = mean_sem_sd(choice_best_f_dVlr_GP.perSub.perRun(:,:,iRun), 2);
    [choice_worse_f_dVlr_LP.m_aSubs.perRun(:,iRun), choice_worse_f_dVlr_LP.sem_aSubs.perRun(:,iRun)] = mean_sem_sd(choice_worse_f_dVlr_LP.perSub.perRun(:,:,iRun), 2);
    [pChoice_best_f_dVlr_GP.m_aSubs.perRun(:,iRun), pChoice_best_f_dVlr_GP.sem_aSubs.perRun(:,iRun)] = mean_sem_sd(pChoice_best_f_dVlr_GP.perSub.perRun(:,:,iRun), 2);
    [pChoice_worse_f_dVlr_LP.m_aSubs.perRun(:,iRun), pChoice_worse_f_dVlr_LP.sem_aSubs.perRun(:,iRun)] = mean_sem_sd(pChoice_worse_f_dVlr_LP.perSub.perRun(:,:,iRun), 2);
    [choice_left_f_dVlr_GP.m_aSubs.perRun(:,iRun), choice_left_f_dVlr_GP.sem_aSubs.perRun(:,iRun)] = mean_sem_sd(choice_left_f_dVlr_GP.perSub.perRun(:,:,iRun), 2);
    [choice_left_f_dVlr_LP.m_aSubs.perRun(:,iRun), choice_left_f_dVlr_LP.sem_aSubs.perRun(:,iRun)] = mean_sem_sd(choice_left_f_dVlr_LP.perSub.perRun(:,:,iRun), 2);
    [pChoice_left_f_dVlr_GP.m_aSubs.perRun(:,iRun), pChoice_left_f_dVlr_GP.sem_aSubs.perRun(:,iRun)] = mean_sem_sd(pChoice_left_f_dVlr_GP.perSub.perRun(:,:,iRun), 2);
    [pChoice_left_f_dVlr_LP.m_aSubs.perRun(:,iRun), pChoice_left_f_dVlr_LP.sem_aSubs.perRun(:,iRun)] = mean_sem_sd(pChoice_left_f_dVlr_LP.perSub.perRun(:,:,iRun), 2);
end

%% average across subjects
%  mean
[choice_best_GP.m_aSubs.aRuns, choice_best_GP.sem_aSubs.aRuns] = mean_sem_sd(choice_best_GP.perSub.aRuns, 2);
[choice_worse_LP.m_aSubs.aRuns, choice_worse_LP.sem_aSubs.aRuns]= mean_sem_sd(choice_worse_LP.perSub.aRuns, 2);
[pChoice_best_GP.m_aSubs.aRuns, pChoice_best_GP.sem_aSubs.aRuns]= mean_sem_sd(pChoice_best_GP.perSub.aRuns, 2);
[pChoice_worse_LP.m_aSubs.aRuns, pChoice_worse_LP.sem_aSubs.aRuns]= mean_sem_sd(pChoice_worse_LP.perSub.aRuns, 2);
% conf
[conf_GP.m_aSubs.aRuns, conf_GP.sem_aSubs.aRuns]= mean_sem_sd(conf_GP.perSub.aRuns, 2);
[conf_LP.m_aSubs.aRuns, conf_LP.sem_aSubs.aRuns]= mean_sem_sd(conf_LP.perSub.aRuns, 2);
[choice_best_f_Conf_GP.m_aSubs.aRuns, choice_best_f_Conf_GP.sem_aSubs.aRuns] = mean_sem_sd(choice_best_f_Conf_GP.perSub.aRuns, 2);
[choice_worse_f_Conf_LP.m_aSubs.aRuns, choice_worse_f_Conf_LP.sem_aSubs.aRuns]= mean_sem_sd(choice_worse_f_Conf_LP.perSub.aRuns, 2);
[pChoice_best_f_Conf_GP.m_aSubs.aRuns, pChoice_best_f_Conf_GP.sem_aSubs.aRuns]= mean_sem_sd(pChoice_best_f_Conf_GP.perSub.aRuns, 2);
[pChoice_worse_f_Conf_LP.m_aSubs.aRuns, pChoice_worse_f_Conf_LP.sem_aSubs.aRuns]= mean_sem_sd(pChoice_worse_f_Conf_LP.perSub.aRuns, 2);
[conf_f_Conf_GP.m_aSubs.aRuns, conf_f_Conf_GP.sem_aSubs.aRuns]= mean_sem_sd(conf_f_Conf_GP.perSub.aRuns, 2);
[conf_f_Conf_LP.m_aSubs.aRuns, conf_f_Conf_LP.sem_aSubs.aRuns]= mean_sem_sd(conf_f_Conf_LP.perSub.aRuns, 2);
% dV=Qleft-Qright
[dVlr_GP.m_aSubs.aRuns, dVlr_GP.sem_aSubs.aRuns]= mean_sem_sd(dVlr_GP.perSub.aRuns, 2);
[dVlr_LP.m_aSubs.aRuns, dVlr_LP.sem_aSubs.aRuns]= mean_sem_sd(dVlr_LP.perSub.aRuns, 2);
[choice_best_f_dVlr_GP.m_aSubs.aRuns, choice_best_f_dVlr_GP.sem_aSubs.aRuns] = mean_sem_sd(choice_best_f_dVlr_GP.perSub.aRuns, 2);
[choice_worse_f_dVlr_LP.m_aSubs.aRuns, choice_worse_f_dVlr_LP.sem_aSubs.aRuns]= mean_sem_sd(choice_worse_f_dVlr_LP.perSub.aRuns, 2);
[pChoice_best_f_dVlr_GP.m_aSubs.aRuns, pChoice_best_f_dVlr_GP.sem_aSubs.aRuns]= mean_sem_sd(pChoice_best_f_dVlr_GP.perSub.aRuns, 2);
[pChoice_worse_f_dVlr_LP.m_aSubs.aRuns, pChoice_worse_f_dVlr_LP.sem_aSubs.aRuns]= mean_sem_sd(pChoice_worse_f_dVlr_LP.perSub.aRuns, 2);
[dVlr_f_dVlr_GP.m_aSubs.aRuns, dVlr_f_dVlr_GP.sem_aSubs.aRuns]= mean_sem_sd(dVlr_f_dVlr_GP.perSub.aRuns, 2);
[dVlr_f_dVlr_LP.m_aSubs.aRuns, dVlr_f_dVlr_LP.sem_aSubs.aRuns]= mean_sem_sd(dVlr_f_dVlr_LP.perSub.aRuns, 2);
[choice_left_f_dVlr_GP.m_aSubs.aRuns, choice_left_f_dVlr_GP.sem_aSubs.aRuns] = mean_sem_sd(choice_left_f_dVlr_GP.perSub.aRuns, 2);
[choice_left_f_dVlr_LP.m_aSubs.aRuns, choice_left_f_dVlr_LP.sem_aSubs.aRuns]= mean_sem_sd(choice_left_f_dVlr_LP.perSub.aRuns, 2);
[pChoice_left_f_dVlr_GP.m_aSubs.aRuns, pChoice_left_f_dVlr_GP.sem_aSubs.aRuns]= mean_sem_sd(pChoice_left_f_dVlr_GP.perSub.aRuns, 2);
[pChoice_left_f_dVlr_LP.m_aSubs.aRuns, pChoice_left_f_dVlr_LP.sem_aSubs.aRuns]= mean_sem_sd(pChoice_left_f_dVlr_LP.perSub.aRuns, 2);

%% graph
pSize = 40;
lSize = 3;
mSize = 30;
x_vals = 1:n_GL_trials_perRun;
xlim_vals = [1 n_GL_trials_perRun]; 
GP_col = [222 45 38]./255;
LP_col = [251 106 74]./255;

%% figure per run
fig_perRun_hdl = fig();

for iRun = 1:n_RL_runs
    subplot(1,n_RL_runs, iRun);
    hold on;
    % gain pair choice best
    errorbar(x_vals,...
        choice_best_GP.m_aSubs.perRun(:,iRun),...
        choice_best_GP.sem_aSubs.perRun(:,iRun),...
        'g *',...
        'LineWidth',lSize);
    % gain pair model p(choice=best)
    plot(x_vals,...
        pChoice_best_GP.m_aSubs.perRun(:,iRun),...
        'g--',...
        'LineWidth',lSize);
    % loss pair choice worse
    errorbar(x_vals,...
        choice_worse_LP.m_aSubs.perRun(:,iRun),...
        choice_worse_LP.sem_aSubs.perRun(:,iRun),...
        'r *',...
        'LineWidth',lSize);
    % loss pair model p(choice=worse)
    plot(x_vals,...
        pChoice_worse_LP.m_aSubs.perRun(:,iRun),...
        'r--',...
        'LineWidth',lSize);

    line(xlim_vals,[0.5 0.5],...
        'LineStyle','-','LineWidth',lSize,'Color','k');
    %     xlabel('Occurrence');
    xlabel('Trial');
    ylabel('Choice (%)');
    xlim(xlim_vals);
    ylim([0 1]);
    legend_size(pSize);
end % run loop
save_fig(fig_perRun_hdl, saveFolder,...
    ['RL_choice_and_fit_perRun_model',num2str(model_n),'_',num2str(NS),'subs_',analysis_type,'.png']);

%% figure average choices across runs
fig_aRuns_hdl = fig();
hold on;
% gain pair choice best
GP_choice_hdl = errorbar(x_vals,...
    choice_best_GP.m_aSubs.aRuns,...
    choice_best_GP.sem_aSubs.aRuns,...
    'g *',...
    'LineWidth',lSize);
GP_choice_hdl.Marker = 'o';
GP_choice_hdl.MarkerSize = mSize;
GP_choice_hdl.Color = GP_col;
% gain pair model p(choice=best)
plot(x_vals,...
    pChoice_best_GP.m_aSubs.aRuns,...
    'LineStyle','--','Color',GP_col,...
    'LineWidth',lSize);
% loss pair choice worse
LP_choice_hdl = errorbar(x_vals,...
    choice_worse_LP.m_aSubs.aRuns,...
    choice_worse_LP.sem_aSubs.aRuns,...
    'r *',...
    'LineWidth',lSize);
LP_choice_hdl.Marker = 's';
LP_choice_hdl.MarkerSize = mSize;
LP_choice_hdl.Color = LP_col;
% loss pair model p(choice=worse)
plot(x_vals,...
    pChoice_worse_LP.m_aSubs.aRuns,...
    'LineStyle','--','Color',LP_col,...
    'LineWidth',lSize);

line(xlim_vals,[0.5 0.5],...
    'LineStyle','-','LineWidth',lSize,'Color','k');
line(xlim_vals,[1 1],...
    'LineStyle','-','LineWidth',1,'Color','k');
line(xlim_vals,[0 0],...
    'LineStyle','-','LineWidth',1,'Color','k');
xlabel('Trial');
% xlabel('Occurrence');
% ylabel('Choix (%)');
ylabel('Choice (%)');
xlim(xlim_vals);
ylim([0 1]);
legend_size(pSize);
save_fig(fig_aRuns_hdl, saveFolder,...
    ['RL_choice_and_fit_aRuns_model',num2str(model_n),'_',num2str(NS),'subs_',analysis_type,'.png']);

%% figure average confidence across runs
fig_conf_aRuns_hdl = fig();
hold on;
% gain pair confidence
jbfill(x_vals,...
        conf_GP.m_aSubs.aRuns'+conf_GP.sem_aSubs.aRuns',...
        conf_GP.m_aSubs.aRuns'-conf_GP.sem_aSubs.aRuns',...
        conf_GP.m_aSubs.aRuns',...
        'g','g',1,0.5);
% loss pair choice worse
jbfill(x_vals,...
        conf_LP.m_aSubs.aRuns'+conf_LP.sem_aSubs.aRuns',...
        conf_LP.m_aSubs.aRuns'-conf_LP.sem_aSubs.aRuns',...
        conf_LP.m_aSubs.aRuns',...
        'r','r',1,0.5);

xlabel('Trial');
% ylabel('Choix (%)');
ylabel('Conf');
xlim(xlim_vals);
ylim([0 0.2]);
legend_size(pSize);
save_fig(fig_conf_aRuns_hdl, saveFolder,...
    ['RL_confidence_aRuns_model',num2str(model_n),...
    '_',num2str(NS),'subs_',analysis_type,'.png']);

%% choice = f(confidence)
xlim_vals_conf = [0 0.21]; 
fig_aRuns_hdl = fig();
hold on;
% gain pair choice best
errorbar(conf_f_Conf_GP.m_aSubs.aRuns,...
    choice_best_f_Conf_GP.m_aSubs.aRuns,...
    choice_best_f_Conf_GP.sem_aSubs.aRuns,...
    'g *',...
    'LineWidth',lSize);
% gain pair model p(choice=best)
plot(conf_f_Conf_GP.m_aSubs.aRuns,...
    pChoice_best_f_Conf_GP.m_aSubs.aRuns,...
    'g--',...
    'LineWidth',lSize);
% loss pair choice worse
errorbar(conf_f_Conf_LP.m_aSubs.aRuns,...
    choice_worse_f_Conf_LP.m_aSubs.aRuns,...
    choice_worse_f_Conf_LP.sem_aSubs.aRuns,...
    'r *',...
    'LineWidth',lSize);
% loss pair model p(choice=worse)
plot(conf_f_Conf_LP.m_aSubs.aRuns,...
    pChoice_worse_f_Conf_LP.m_aSubs.aRuns,...
    'r--',...
    'LineWidth',lSize);

line(xlim_vals_conf,[0.5 0.5],...
    'LineStyle','-','LineWidth',lSize,'Color','k');
line(xlim_vals_conf,[1 1],...
    'LineStyle','-','LineWidth',1,'Color','k');
line(xlim_vals_conf,[0 0],...
    'LineStyle','-','LineWidth',1,'Color','k');
xlabel('Conf');
% ylabel('Choix (%)');
ylabel('Choice (%)');
xlim(xlim_vals_conf);
ylim([0 1]);
legend_size(pSize);
save_fig(fig_aRuns_hdl, saveFolder,...
    ['RL_choice_and_fit_aRuns_model',num2str(model_n),'_f_Conf_',num2str(NS),'subs_',analysis_type,'.png']);

%% choice = f(dV)
xlim_vals_dVlr = [-0.55 0.55]; 
fig_dV_aRuns_hdl = fig();
hold on;
% gain pair choice best
errorbar(dVlr_f_dVlr_GP.m_aSubs.aRuns,...
    choice_best_f_dVlr_GP.m_aSubs.aRuns,...
    choice_best_f_dVlr_GP.sem_aSubs.aRuns,...
    'g *',...
    'LineWidth',lSize);
% gain pair model p(choice=best)
plot(dVlr_f_dVlr_GP.m_aSubs.aRuns,...
    pChoice_best_f_dVlr_GP.m_aSubs.aRuns,...
    'g--',...
    'LineWidth',lSize);
% loss pair choice worse
errorbar(dVlr_f_dVlr_LP.m_aSubs.aRuns,...
    choice_worse_f_dVlr_LP.m_aSubs.aRuns,...
    choice_worse_f_dVlr_LP.sem_aSubs.aRuns,...
    'r *',...
    'LineWidth',lSize);
% loss pair model p(choice=worse)
plot(dVlr_f_dVlr_LP.m_aSubs.aRuns,...
    pChoice_worse_f_dVlr_LP.m_aSubs.aRuns,...
    'r--',...
    'LineWidth',lSize);

line(xlim_vals_dVlr,[0.5 0.5],...
    'LineStyle','-','LineWidth',1,'Color','k');
line([0 0],[0 1],...
    'LineStyle','-','LineWidth',1,'Color','k');
line(xlim_vals_dVlr,[1 1],...
    'LineStyle','-','LineWidth',1,'Color','k');
line(xlim_vals_dVlr,[0 0],...
    'LineStyle','-','LineWidth',1,'Color','k');
xlabel('Qleft - Qright');
% ylabel('Choix (%)');
ylabel('Choice (%)');
xlim(xlim_vals_dVlr);
ylim([0 1]);
legend_size(pSize);
save_fig(fig_dV_aRuns_hdl, saveFolder,...
    ['RL_choice_and_fit_aRuns_model',...
    num2str(model_n),'_f_dVlr_',num2str(NS),'subs_',analysis_type,'.png']);

%% choice left = f(Qleft-Qright)
xlim_vals_dVlr = [-0.55 0.55]; 
fig_dV_aRuns_hdl = fig();
hold on;
% gain pair choice left
Val_f_dV_GP_hdl = errorbar(dVlr_f_dVlr_GP.m_aSubs.aRuns,...
    choice_left_f_dVlr_GP.m_aSubs.aRuns,...
    choice_left_f_dVlr_GP.sem_aSubs.aRuns,...
    'g *',...
    'LineWidth',lSize);
Val_f_dV_GP_hdl.Marker = 'o';
Val_f_dV_GP_hdl.MarkerSize = mSize;
Val_f_dV_GP_hdl.Color = GP_col;
% gain pair model p(choice=left)
plot(dVlr_f_dVlr_GP.m_aSubs.aRuns,...
    pChoice_left_f_dVlr_GP.m_aSubs.aRuns,...
    'LineStyle','--','Color',GP_col,...
    'LineWidth',lSize);
% loss pair choice left
Val_f_dV_LP_hdl = errorbar(dVlr_f_dVlr_LP.m_aSubs.aRuns,...
    choice_left_f_dVlr_LP.m_aSubs.aRuns,...
    choice_left_f_dVlr_LP.sem_aSubs.aRuns,...
    'r *',...
    'LineWidth',lSize);
Val_f_dV_LP_hdl.Marker = 's';
Val_f_dV_LP_hdl.MarkerSize = mSize;
Val_f_dV_LP_hdl.Color = LP_col;
% loss pair model p(choice=left)
plot(dVlr_f_dVlr_LP.m_aSubs.aRuns,...
    pChoice_left_f_dVlr_LP.m_aSubs.aRuns,...
    'LineStyle','--','Color',LP_col,...
    'LineWidth',lSize);

line(xlim_vals_dVlr,[0.5 0.5],...
    'LineStyle','-','LineWidth',1,'Color','k');
line([0 0],[0 1],...
    'LineStyle','-','LineWidth',1,'Color','k');
line(xlim_vals_dVlr,[1 1],...
    'LineStyle','-','LineWidth',1,'Color','k');
line(xlim_vals_dVlr,[0 0],...
    'LineStyle','-','LineWidth',1,'Color','k');
xlabel('Qleft - Qright');
% ylabel('Choix (%)');
ylabel('Choice (%)');
xlim(xlim_vals_dVlr);
ylim([0 1]);
legend_size(pSize);
save_fig(fig_dV_aRuns_hdl, saveFolder,...
    ['RL_choice_left_and_fit_aRuns_model',...
    num2str(model_n),'_f_dVlr_',num2str(NS),'subs_',analysis_type,'.png']);

end % function